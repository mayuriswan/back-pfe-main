// <auto-generated />
using System;
using System.Collections.Generic;
using API_Iresen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API_Iresen.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API_Iresen.Aap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Budget")
                        .HasColumnType("integer");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Dateclo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Datepub")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Dureemin")
                        .HasColumnType("integer");

                    b.Property<int>("Duremax")
                        .HasColumnType("integer");

                    b.Property<string>("Instituthote")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<List<string>>("Paysautorises")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("RespoId")
                        .HasColumnType("integer");

                    b.Property<int>("Soumissionaccepte")
                        .HasColumnType("integer");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RespoId");

                    b.ToTable("Aaps");
                });

            modelBuilder.Entity("API_Iresen.Models.ProjectCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric");

                    b.Property<bool>("BudgetSepare")
                        .HasColumnType("boolean");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCloture")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DureeMaximale")
                        .HasColumnType("integer");

                    b.Property<int>("DureeMinimale")
                        .HasColumnType("integer");

                    b.Property<string>("FormulaireEvaluation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstitutHote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaysAutorises")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostBudget")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SoumissionAcceptee")
                        .HasColumnType("integer");

                    b.Property<string>("TypeTache")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjectCalls");
                });

            modelBuilder.Entity("API_Iresen.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_Iresen.Aap", b =>
                {
                    b.HasOne("API_Iresen.User", "Respo")
                        .WithMany()
                        .HasForeignKey("RespoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Respo");
                });
#pragma warning restore 612, 618
        }
    }
}
